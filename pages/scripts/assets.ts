export const assets = [
  {
    "file": "svg.js",
    "content":
      "// deno-fmt-ignore-file\n// deno-lint-ignore-file\n\nconst iconAttrs = {\n  width: 24,\n  height: 24,\n  viewBox: '0 0 24 24',\n  fill: 'none',\n  stroke: 'currentColor',\n  'stroke-width': 2,\n  'stroke-linecap': 'round',\n  'stroke-linejoin': 'round',\n  style: 'width:1em;position:relative;top:0.05em',\n}\n\nconst downloadIcon = '<path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path><polyline points=\"7 10 12 15 17 10\"></polyline><line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>'\nconst fullscreenIcon = '<polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" y1=\"3\" x2=\"14\" y2=\"10\"></line><line x1=\"3\" y1=\"21\" x2=\"10\" y2=\"14\"></line>'\nconst closeIcon = '<line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>'\n\n/** @type {(parent: HTMLElement, inner: string, label: string, onClick: () => void) => HTMLElement} */\nconst appendButton = (parent, inner, label, onClick) => {\n  const icon = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n  Object.entries(iconAttrs).forEach(([k, v]) => { icon.setAttribute(k, String(v)) })\n  icon.innerHTML = inner\n  const button = document.createElement('button')\n  button.setAttribute('title', label)\n  button.addEventListener('click', onClick)\n  button.appendChild(icon)\n  parent.appendChild(button)\n  return button\n}\n\n/** @type {(tag: string, className: string) => HTMLElement} */\nconst createElementWithClass = (tag, className) => {\n  const el = document.createElement(tag)\n  el.classList.add(className)\n  return el\n}\n\n/** @type {(parent: HTMLElement, children: HTMLElement[]) => void} */\nconst append = (parent, children) => {\n  children.forEach(child => { parent.appendChild(child) })\n}\n\n/** @type {(parent: HTMLElement, svg: SVGElement) => void} */\nconst goFullscreen = svg => {\n  const fullscreenSvg = createElementWithClass('div', 'fullscreen-svg')\n  const fullscreenSvgBtns = createElementWithClass('div', 'fullscreen-svg-btns')\n  appendButton(fullscreenSvgBtns, closeIcon, 'Close', () => { document.body.removeChild(fullscreenSvg) })\n  const fullscreenSvgContainer = createElementWithClass('div', 'fullscreen-svg-container')\n  const image = document.createElement('div')\n  image.innerHTML = svg.outerHTML\n  append(fullscreenSvgContainer, [fullscreenSvgBtns, image])\n  append(fullscreenSvg, [fullscreenSvgContainer])\n  append(document.body, [fullscreenSvg])\n}\n\n/** @type {(svg: SVGElement, lang: string = 'image') => void} */\nconst downloadSvg = (svg, lang) => {\n  const a = document.createElement('a')\n  a.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(svg.outerHTML))\n  a.setAttribute('download', lang + '.svg')\n  a.style.display = 'none'\n  document.body.appendChild(a)\n  a.click()\n  document.body.removeChild(a)\n}\n\n/** @type {([parent: HTMLElement, svg: SVGElement]) => void} */\nconst onSvg = ([parent, svg]) => {\n  const lang = Array.from(parent.classList).filter(d => d !== 'code')[0]\n  const btns = createElementWithClass('div', 'svg-btns')\n  appendButton(btns, downloadIcon, 'Download image', () => downloadSvg(svg, lang))\n  appendButton(btns, fullscreenIcon, 'View fullscreen', () => goFullscreen(svg))\n  parent.insertBefore(btns, svg)\n}\n\n/** @type {() => [parent: HTMLElement, svg: SVGElement][]} */\nconst getSvgs = () => Array.from(document.getElementsByClassName('code'))\n  .reduce((r, el) => {\n    const svg = el.getElementsByTagName('svg')[0]\n    if (svg) { r.push([el, svg]) }\n    return r\n  }, [])\n\nwindow.onload = () => { getSvgs().forEach(onSvg) }\n",
  },
  {
    "file": "style.css",
    "content":
      ':root {\n  /* colors */\n  --black: rgb(24, 27, 34);\n  --black1: rgb(36, 41, 51);\n  --black2: #2e3440;\n  --black3: #3b4252;\n  --white: #eceff4;\n  --white1: #e5e9f0;\n  --white2: #d8dee9;\n  --very-white: white;\n  --very-black: black;\n  --green-blue: #8fbcbb;\n  --blue-green: #88c0d0;\n  --lightblue: #81a1c1;\n  --blue: #5e81ac;\n  --red: #bf616a;\n  --orange: #d08770;\n  --yellow: #ebcb8b;\n  --green: #a3be8c;\n  --purple: #b48ead;\n\n  /* fonts */\n  --monospace: Menlo, Consolas, Monaco, \'Andale Mono\', \'Ubuntu Mono\', monospace;\n  --serif: "Source Serif Pro", "Iowan Old Style", "Apple Garamond", "Palatino Linotype", "Times New Roman", "Droid Serif", Times, serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n  --sans-serif: -apple-system, BlinkMacSystemFont, "avenir next", avenir, helvetica, "helvetica neue", ubuntu, roboto, noto, "segoe ui", arial, sans-serif;\n\n  /* sizes */\n  --max-width-content: 1080px;\n  --line-height: 1.5;\n  --form-width: calc(var(--max-width-content) * 0.8);\n  --font-size: 25px;\n\n  /** theme colors  (light) */\n  --bg-color: var(--white);\n  --bg-color-light: var(--white2);\n  --color: var(--black);\n  --color-light: var(--black3);\n  --em-color: var(--very-black);\n  --primary-color: var(--blue);\n  --primary-contrast-color: var(--white);\n  --secondary-color: var(--red);\n  --secondary-contrast-color: var(--white);\n  --input-bg-color: var(--white);\n  --input-bg-color-disabled: var(--white1);\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    --bg-color: var(--black);\n    --bg-color-light: var(--black1);\n    --color: var(--white);\n    --color-light: var(--white2);\n    --em-color: var(--very-white);\n    --primary-color: var(--green-blue);\n    --primary-contrast-color: var(--black);\n    --secondary-color: var(--red);\n    --secondary-contrast-color: var(--white);\n    --input-bg-color: var(--black);\n    --input-bg-color-disabled: var(--black2);\n  }\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  background-color: var(--bg-color);\n  color: var(--color);\n  font-family: var(--serif);\n  font-size: var(--font-size);\n  line-height: var(--line-height);\n}\n\n@media (max-width:1000px) {\n  body { font-size: 20px; }\n}\n\n@media (max-width:500px) {\n  body { font-size: 16px; }\n}\n\n@media (max-width:300px) {\n  body { font-size: 14px; }\n}\n\nmain {\n  margin: 0 auto;\n  max-width: var(--max-width-content);\n  padding: 3rem 1rem;\n}\n\nheader {\n  margin: 0 auto;\n}\n\nheader.form-header {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n@media (max-width: 800px) {\n  header.form-header {\n    grid-template-columns: 1fr;\n  }\n}\n\nheader.form-header .left,\nheader.form-header .right {\n  padding: 1em;\n}\n\nheader.form-header .left *,\nheader.form-header .right * {\n  margin: 0;\n}\n\nheader.form-header .right {\n  text-align: right;\n}\n\nheader.form-header .right button {\n  margin-left: 0.5em;\n}\n\n\nh1, h2, h3, h4, h5, h6 {\n  font-family: var(--sans-serif);\n  font-weight: bold;\n}\n\np {\n  text-align: justify;\n}\n\nem, b {\n  color: var(--em-color);\n  font-weight: bolder;\n}\n\na {\n  color: var(--primary-color);\n}\n\na:hover {\n  color: var(--secondary-color);\n}\n\np code {\n  color: var(--em-color);\n  background-color: var(--bg-color-light);\n  padding-right: 0.1em;\n  padding-left: 0.1em;\n}\n\nblockquote {\n  margin-left: 0;\n  margin-right: 0;\n  padding: 0.1em 1em;\n  background-color: var(--bg-color-light);\n  border-left: 0.05em solid var(--color);\n}\n\nbutton {\n  padding: 0.5em 1em;\n  background-color: var(--primary-color);\n  color: var(--primary-contrast-color);\n  font-size: calc(var(--font-size) * 0.8);\n  border: none;\n}\n\n.svg-btns button {\n  padding: 0.05em 0.1em;\n}\n\nbutton:hover {\n  background-color: var(--secondary-color);\n  color: var(--secondary-contrast-color);\n  cursor: pointer;\n}\n\ntable {\n  border-collapse: collapse;\n  width: 100%;\n}\n\ntr:hover {\n  color: var(--primary-contrast-color);\n  background-color: var(--primary-color);\n}\n\ntr:hover th, th {\n  color: var(--bg-color);\n  background-color: var(--color);\n}\n\ntr:hover a {\n  color: var(--bg-color);\n}\n\nth, td {\n  border: 1px solid var(--color-light);\n  padding: .5rem;\n  text-align: left;\n}\n\nth {\n  text-align: center;\n}\n\ntd {\n  font-family: var(--monospace);\n}\n\ntr td:last-child {\n  width: 2em;\n  text-align: center;\n}\n\n/** form **/\nform {\n  display: block;\n  max-width: var(--form-width);\n  padding: 1.5rem;\n  margin: auto;\n  background-color: var(--bg-color-light);\n  font-family: var(--sans-serif);\n  font-size: 0.9em;\n}\n\nbutton:disabled,\ninput:disabled {\n  background: var(--input-bg-color-disabled);\n  border: none;\n  color: var(--color-light);\n  cursor: not-allowed;\n}\n\nbutton[disabled]:hover,\ninput[type="submit"][disabled]:hover {\n  filter: none;\n}\n\ninput,\nlabel,\nselect,\ntextarea {\n  display: block;\n  font-size: inherit;\n  box-sizing:border-box;\n  max-width: 100%;\n}\n\ninput,\nselect,\ntextarea {\n  color: var(--color);\n  background-color: var(--input-bg-color);\n}\n\ntextarea,\nselect,\ninput[type="color"],\ninput[type="date"],\ninput[type="number"],\ninput[type="range"],\ninput[type="text"] {\n  width: 100%;\n}\n\ntextarea,\ninput,\noption {\n  font-family: inherit;\n  font-size: inherit;\n}\n\ninput[type="color"] {\n  padding: 0;\n  border: none;\n  height: 2em;\n}\n\ninput[type="checkbox"],\ninput[type="radio"] {\n  display: inline-block;\n}\n\ninput[type="checkbox"]+label,\ninput[type="radio"]+label {\n  display: inline-block;\n  position: relative;\n  top: 1px;\n  left: 0.5em;\n}\n\ninput[type="radio"] {\n  margin-left: 1em;\n  margin-bottom: 0;\n}\n\ninput[type="radio"]+label {\n  font-weight: normal;\n}\n\ninput[type="range"] {\n  padding: 0.4rem 0;\n}\n\ninput,\nselect,\ntextarea,\nfieldset {\n  border: none;\n  margin-bottom: 1rem;\n  padding: 0.6rem 0.8rem 0.3rem 0.8rem;\n}\n\nfieldset {\n  border: none;\n  padding: 0;\n}\n\nlabel {\n  margin-bottom: 0.2rem;\n}\n\nlegend {\n  margin-bottom: 0.2em;\n}\n\ninput[type="submit"] {\n  background-color: var(--primary-color);\n  color: var(--primary-contrast-color);\n  border: none;\n  cursor: pointer;\n  margin-top: 1rem;\n  margin-bottom: 0;\n}\n\ninput[type="submit"]:hover {\n  background-color: var(--secondary-color);\n  color: var(--secondary-contrast-color);\n}\n\n/** code **/\n\n.code {\n  text-align: center;\n  margin-top: 1em;\n  margin-bottom: 1em;\n}\n\n.code.form {\n  text-align: left;\n}\n\n.code > svg {\n  max-height: 80vh;\n}\n\ncode {\n  font-size: 0.9em;\n  font-family: var(--monospace);\n  background-color: var(--black1);\n}\n\ncode[class*="language-"],\npre[class*="language-"] {\n\tcolor: var(--white);\n\tbackground: none;\n\ttext-shadow: 0 1px var(--black);\n\tfont-family: var(--monospace);\n\tfont-size: 1em;\n\ttext-align: left;\n\twhite-space: pre;\n\tword-spacing: normal;\n\tword-break: normal;\n\tword-wrap: normal;\n\tline-height: 1.5;\n\n\t-moz-tab-size: 4;\n\t-o-tab-size: 4;\n\ttab-size: 4;\n\n\t-webkit-hyphens: none;\n\t-moz-hyphens: none;\n\t-ms-hyphens: none;\n\thyphens: none;\n}\n\n/* Code blocks */\n\npre[class*="language-"] {\n\tpadding: 1em;\n\tmargin: .5em 0;\n\toverflow: auto;\n\tborder-radius: 0.3em;\n}\n\n:not(pre) > code[class*="language-"],\npre[class*="language-"] {\n\tbackground: var(--black1);\n}\n\n/* Inline code */\n:not(pre) > code[class*="language-"] {\n\tpadding: .1em;\n\tborder-radius: .3em;\n\twhite-space: normal;\n}\n\n.token.comment,\n.token.prolog,\n.token.doctype,\n.token.cdata {\n\tcolor: var(--lightblue);\n}\n\n.token.punctuation {\n\tcolor: var(--white2);\n}\n\n.token.namespace {\n\topacity: .7;\n}\n\n.token.property,\n.token.tag,\n.token.constant,\n.token.symbol,\n.token.deleted {\n\tcolor: var(--red);\n}\n\n.token.boolean,\n.token.number {\n\tcolor: var(--purple);\n}\n\n.token.selector,\n.token.attr-name,\n.token.string,\n.token.char,\n.token.builtin,\n.token.inserted {\n\tcolor: var(--green);\n}\n\n.token.operator,\n.token.entity,\n.token.url,\n.language-css .token.string,\n.style .token.string,\n.token.variable {\n\tcolor: var(--white2);\n}\n\n.token.atrule,\n.token.attr-value,\n.token.function,\n.token.class-name {\n\tcolor: var(--yellow);\n}\n\n.token.keyword {\n\tcolor: var(--green-blue);\n}\n\n.token.regex,\n.token.important {\n\tcolor: var(--orange);\n}\n\n.token.important,\n.token.bold {\n\tfont-weight: bold;\n}\n.token.italic {\n\tfont-style: italic;\n}\n\n.token.entity {\n\tcursor: help;\n}\n\n/** utils */\nspan.sep-1-char {\n  display: inline-block;\n  width: 0.5em;\n}\n\n/** admin page */\n\n.admin-file-tree,\n.admin-form-list {\n  background-color: var(--bg-color-light);\n  padding-bottom: 0.5em;\n}\n\n.admin-file-tree ul,\n.admin-form-list {\n  margin: 0;\n  list-style-type: none;\n  padding-left: 0.5em;\n}\n\n.admin-form-list {\n  margin-left: 0;\n  padding-top: 0.5em;\n}\n\n.admin-file-tree details,\n.admin-file-tree li,\n.admin-form-list li {\n  margin-left: 0.5em;\n  padding-top: 0.2em;\n  padding-left: 0.5em;\n}\n\n.admin-file-tree summary,\n.admin-file-tree li,\n.admin-form-list li {\n  border-bottom: var(--bg-color) solid 1px;\n}\n\ndetails[open] summary ~ * {\n  animation: sweep .1s ease-in-out;\n}\n\n@keyframes sweep {\n  0% {opacity: 0; transform: translateY(-30px)}\n  100% {opacity: 1; transform: translateY(0)}\n}\n',
  },
  {
    "file": "svg.css",
    "content":
      ".code .svg-btns {\n  width: 100%;\n  text-align: right;\n}\n\n.code .svg-btns button,\n.fullscreen-svg-btns button {\n  margin-left: 0.5em;\n  font-size: 1.2em;\n}\n\n.fullscreen-svg {\n  display: block;\n  position: fixed;\n  z-index: 10;\n  left: 0px;\n  top: 0px;\n  width: 100vw;\n  height: 100vh;\n  overflow: auto;\n  background-color: var(--bg-color);\n  opacity: 0.975;\n}\n\n.fullscreen-svg .fullscreen-svg-btns {\n  padding: 0.5em;\n  text-align: right;\n}\n\n.fullscreen-svg .fullscreen-svg-container {\n  width: 100%;\n}\n\n",
  },
];

export const createAssetFiles = (folder: string) =>
  Promise.all(
    assets.map(({ file, content }) =>
      Deno.writeTextFile(folder + "/" + file, content)
    ),
  );
